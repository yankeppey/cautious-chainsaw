# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
# For a detailed guide to building and testing on Android, read the docs:
# https://circleci.com/docs/2.0/language-android/ for more details.
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  android: circleci/android@2.0.3

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build:
    # These next lines define the Android machine image executor.
    # See: https://circleci.com/docs/2.0/executor-types/
    executor:
      name: android/android-docker
      resource-class: large
      tag: 2022.08.1

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout

      # Then start the emulator and run the Instrumentation tests!
      #- android/start-emulator-and-run-tests:
      #    test-command: ./gradlew connectedDebugAndroidTest
      #    system-image: system-images;android-25;google_apis;x86

      # And finally run the release build
      - android/restore-gradle-cache:
      - android/restore-build-cache

      - run: # print the name of the branch we're on
          name: "What build number am I building?"
          command: echo ${CIRCLE_BUILD_NUM}

      # The next step will run the unit tests
      - android/run-tests:
          test-command: ./gradlew testDebug --continue
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

      - run:
          name: Assemble build
          command: ./gradlew assembleDebug

      - android/save-gradle-cache:
      - android/save-build-cache

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build
